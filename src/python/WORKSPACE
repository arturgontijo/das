workspace(name = "rules_python_das")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "rules_python",
    sha256 = "9c6e26911a79fbf510a8f06d8eedb40f412023cf7fa6d1461def27116bff022c",
    strip_prefix = "rules_python-1.1.0",
    url = "https://github.com/bazelbuild/rules_python/releases/download/1.1.0/rules_python-1.1.0.tar.gz",
)

load("@rules_python//python:repositories.bzl", "py_repositories", "python_register_toolchains")

py_repositories()

python_register_toolchains(
    name = "python_3_10",
    python_version = "3.10",
)

load("@rules_python//python:pip.bzl", "pip_parse")

# Create a central repo that knows about the dependencies needed for runtime from
# requirements_lock.txt.
pip_parse(
    name = "pypi",
    python_interpreter_target = "@python_3_10_host//:python",
    requirements_lock = "//deps:requirements_lock.txt",
)

# Load the starlark macro, which will define runtime dependencies.
load("@pypi//:requirements.bzl", "install_deps")

# Call it to define repos for runtime requirements.
install_deps()

# Create a central repo that knows about the dependencies needed for dev from
# requirements_dev_lock.txt.
pip_parse(
    name = "pypi_dev",
    python_interpreter_target = "@python_3_10_host//:python",
    requirements_lock = "//deps:requirements_dev_lock.txt",
)

# Load the starlark macro, which will define dev dependencies.
load("@pypi_dev//:requirements.bzl", install_dev_deps = "install_deps")

# Call it to define repos for dev requirements.
install_dev_deps()

